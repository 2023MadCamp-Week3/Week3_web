[{"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\index.js":"1","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Root.js":"2","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Mainpage.js":"3","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Board.js":"4","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Profile.js":"5","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\App.js":"6","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Questions.js":"7","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\UserDataContext.js":"8","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Test.js":"9","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Signup.js":"10","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\BoardModal.js":"11","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\PostList.jsx":"12","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Post.jsx":"13"},{"size":269,"mtime":1689415275681,"results":"14","hashOfConfig":"15"},{"size":972,"mtime":1689426770335,"results":"16","hashOfConfig":"15"},{"size":3517,"mtime":1689648854019,"results":"17","hashOfConfig":"15"},{"size":5585,"mtime":1689682354854,"results":"18","hashOfConfig":"15"},{"size":2446,"mtime":1689667923690,"results":"19","hashOfConfig":"15"},{"size":3603,"mtime":1689667927516,"results":"20","hashOfConfig":"15"},{"size":12442,"mtime":1689688417748,"results":"21","hashOfConfig":"15"},{"size":359,"mtime":1689426520672,"results":"22","hashOfConfig":"15"},{"size":5291,"mtime":1689668052773,"results":"23","hashOfConfig":"15"},{"size":3465,"mtime":1689667923148,"results":"24","hashOfConfig":"15"},{"size":729,"mtime":1689649482226,"results":"25","hashOfConfig":"15"},{"size":1312,"mtime":1689682545007,"results":"26","hashOfConfig":"15"},{"size":1803,"mtime":1689609906251,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10eje4r",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\index.js",[],[],"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Root.js",[],[],"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Mainpage.js",["72","73"],[],"import React, { useContext } from \"react\";\r\nimport \"./Mainpage.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserDataContext } from \"./UserDataContext\";\r\n\r\nconst Mainpage = () => {\r\n  const navigate = useNavigate();\r\n  const { userData } = useContext(UserDataContext);\r\n  const handleClick = (path) => {\r\n    console.log(userData);\r\n    navigate(path, { state: { user: userData } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"nav-container\">\r\n        <div className=\"entries\" onClick={() => handleClick(\"/questions\")} >Question List</div>\r\n        <div className=\"entries\" onClick={() => handleClick(\"/board\")}>MBTI Lounge</div>\r\n        <div className=\"entries\" onClick={() => handleClick(\"/test\")}>MBTI Test</div>\r\n        <div className=\"entries\" onClick={() => handleClick(\"/profile\")}>My Profile</div>\r\n      </div>\r\n\r\n      <div className=\"line\" style={{ height: \"60vh\" }}>\r\n        <div className=\"column\" >\r\n          <div className=\"colorbox red\" style={{ width: \"25vw\" }}>WHAT IS YOUR MBTI?</div>\r\n          <div className=\"emptyline\" />\r\n          <div className=\"colorbox green\" style={{ width: \"25vw\" }}>Welcome!</div>\r\n        </div>\r\n        <div className=\"row push\">\r\n          <div className=\"colorbox yellow\" style={{ width: \"10vw\" }}></div>\r\n          <div className=\"colorbox white\" style={{ width: \"55vw\", fontSize: \"80px\" }}>MBTI<br/>TMI</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"emptyline\" />\r\n\r\n      <div className=\"line\">\r\n        <div className=\"colorbox blue\" style={{ width: \"30vw\", fontSize: \"5em\" }}>MBTI<br/>TEST {\" >>>\"}</div>\r\n        <div className=\"row\">\r\n          <div className=\"colorbox green\" style={{ width: \"15vw\" }}>I<br/>lounge {\" >\"}</div>\r\n          <div className=\"colorbox white\" style={{ width: \"15vw\" }}>E<br/>lounge {\" >\"}</div>\r\n          <div className=\"emptybox\" />\r\n          <div className=\"colorbox yellow\" style={{ width: \"15vw\" }}>N<br/>lounge {\" >\"}</div>\r\n          \r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"emptyline\" />\r\n\r\n      <div className=\"line\" style={{ justifyContent: \"space-between\" }}>\r\n        <div className=\"colorbox red\" style={{ width: \"15vw\" }}>S<br/>lounge {\" >\"}</div>\r\n        <div className=\"colorbox white\" style={{ width: \"35vw\" }}>Other<br/>lounges {\" >\"}</div>\r\n        <div className=\"colorbox blue\" style={{ width: \"50vw\", fontSize: \"50px\" }}>TODAY'S QUESTION:<br/>WHAT'S YOUR FAVORITE FOOD?</div>\r\n      </div>\r\n\r\n      <footer>\r\n        <div className=\"emptyline\" />\r\n        <div className=\"line\" style={{ height: \"20vh\", color: \"white\", textAlign: \"center\", alignSelf: \"center\" }}>MadCamp, All rights reserved.</div>\r\n      </footer>\r\n    </div>\r\n\r\n  );\r\n\r\n  {/* return (\r\n    <div className=\"container\">\r\n      <h1>메인 페이지</h1>\r\n      <button\r\n        className=\"bts\"\r\n        type=\"submit\"\r\n        onClick={() => handleClick(\"/questions\")}\r\n      >\r\n        질문 리스트\r\n      </button>\r\n      <button\r\n        className=\"bts\"\r\n        type=\"submit\"\r\n        onClick={() => handleClick(\"/test\")}\r\n      >\r\n        MBTI 검사\r\n      </button>\r\n      <button\r\n        className=\"bts\"\r\n        type=\"submit\"\r\n        onClick={() => handleClick(\"/board\")}\r\n      >\r\n        게시판\r\n      </button>\r\n      <button\r\n        className=\"bts\"\r\n        type=\"submit\"\r\n        onClick={() => handleClick(\"/profile\")}\r\n      >\r\n        내 프로필\r\n      </button>\r\n    </div>\r\n  ); */}\r\n};\r\n\r\nexport default Mainpage;\r\n","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Board.js",["74"],[],"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Profile.js",["75"],[],"import { useContext, useState, useCallback, useEffect, React } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Mainpage.css\";\r\nimport { UserDataContext } from \"./UserDataContext\";\r\nimport axios from \"axios\";\r\n\r\nconst Profile = () => {\r\n  const [userm1, setUserm1] = useState(\"\");\r\n  const [userm2, setUserm2] = useState(\"\");\r\n  const [userm3, setUserm3] = useState(\"\");\r\n  const [userm4, setUserm4] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const goToMain = () => {\r\n    navigate(\"/Mainpage\");\r\n  };\r\n  const { userData, setUserData } = useContext(UserDataContext);\r\n\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem(\"userData\");\r\n    if (storedUserData) {\r\n      setUserData(JSON.parse(storedUserData));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n  }, [userData]);\r\n\r\n  const fetchUserMBTI = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_server_uri}/user/${userData.nickname}`\r\n      );\r\n      setUserm1(response.data.m1);\r\n      setUserm2(response.data.m2);\r\n      setUserm3(response.data.m3);\r\n      setUserm4(response.data.m4);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    fetchUserMBTI();\r\n  }, [fetchUserMBTI]);\r\n\r\n  const userMBTI = userm1 + userm2 + userm3 + userm4;\r\n  return (\r\n    <div className=\"profile-container\" style={{ height: \"100vh\" }}>\r\n      <div className=\"column\">\r\n        <div\r\n          className=\"colorbox mbti white\"\r\n          style={{ height: \"10vw\" }}\r\n          onClick={goToMain}\r\n        >\r\n          {\"<<\"} 메인 페이지\r\n        </div>\r\n        <div className=\"colorbox mbti blue\" style={{ height: \"10vw\" }}>\r\n          내 프로필\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"colorbox mbti yellow\">\r\n        <img src={`/Images/${userMBTI}.png`} alt={`${userMBTI} icon`} />\r\n      </div>\r\n      <div className=\"mbti not\"></div>\r\n      <div className=\"mbti not\"></div>\r\n      <div className=\"colorbox mbti red\">내 MBTI : {userMBTI}</div>\r\n      <div className=\"mbti not\"></div>\r\n      <div className=\"colorbox mbti white\" style={{ width: \"40vw\" }}>\r\n        내가 쓴 글\r\n      </div>\r\n      <div className=\"colorbox mbti black\" style={{ width: \"40vw\" }}>\r\n        내가 쓴 댓글\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\App.js",["76"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserDataContext, UserDataProvider } from \"./UserDataContext\";\r\n\r\nconst App = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { userData, setUserData } = useContext(UserDataContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      console.log(\"--UserData--\");\r\n      console.log(userData);\r\n\r\n      navigate(\"/Mainpage\", { state: { user: userData } });\r\n    }\r\n  }, [userData, navigate]);\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_server_uri}/login`,\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n\r\n      if (response.data.status === \"ok\") {\r\n        setUserData(response.data);\r\n        toast.success(`${response.data.nickname}님, 반갑습니다!`, {\r\n          autoClose: 500,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/Mainpage\", { state: { user: userData } });\r\n        }, 1000);\r\n      } else {\r\n        toast.error(response.data.message, {\r\n          autoClose: 500,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error(\"아이디와 비밀번호를 확인해주세요.\");\r\n    }\r\n  };\r\n\r\n  const handleClick = (path) => {\r\n    navigate(path);\r\n  };\r\n\r\n  return (\r\n    <UserDataProvider>\r\n      <div className=\"login-container\">\r\n        <ToastContainer />\r\n        <div className=\"main-img\" style={{ width: \"40vw\" }}>\r\n          <img\r\n            className=\"darkimg\"\r\n            src=\"https://image.ytn.co.kr/osen/2015/03/201503302138778017_5519456b69f38.jpg\"\r\n            style={{ width: \"100%\" }}\r\n          ></img>\r\n          <h1 className=\"img-text\">너 T야?</h1>\r\n        </div>\r\n\r\n        <div className=\"textbox\" style={{ width: \"60vw\", padding: \"0\" }}>\r\n          <div className=\"emptyline\" />\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"column\">\r\n              <label\r\n                className=\"textbox green\"\r\n                htmlFor=\"email\"\r\n                style={{ display: \"block\" }}\r\n              >\r\n                이메일:\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n              />\r\n            </div>\r\n            <div className=\"column\">\r\n              <label htmlFor=\"password\">비밀번호:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </div>\r\n            <button className=\"textbox yellow\" type=\"submit\">\r\n              로그인\r\n            </button>\r\n\r\n            <div\r\n              className=\"textbox blue\"\r\n              type=\"submit\"\r\n              onClick={() => handleClick(\"/signup\")}\r\n            >\r\n              회원 가입\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </UserDataProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Questions.js",["77","78","79"],[],"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\UserDataContext.js",[],[],"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Test.js",["80","81","82"],[],"import { useContext, useState, React, useEffect, useCallback } from \"react\";\r\nimport \"./Test.css\";\r\nimport { UserDataContext } from \"./UserDataContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Test = () => {\r\n  const navigate = useNavigate();\r\n  const [userm1, setUserm1] = useState(\"m1\");\r\n  const [userm2, setUserm2] = useState(\"m2\");\r\n  const [userm3, setUserm3] = useState(\"m3\");\r\n  const [userm4, setUserm4] = useState(\"m4\");\r\n  const [testm1, setTestm1] = useState(\"tm1\");\r\n  const [testm2, setTestm2] = useState(\"tm2\");\r\n  const [testm3, setTestm3] = useState(\"tm3\");\r\n  const [testm4, setTestm4] = useState(\"tm4\");\r\n  const [vars, setVars] = useState(0);\r\n  const [hasSubmitted, setHasSubmitted] = useState(false);\r\n\r\n  /////\r\n\r\n  const { userData, setUserData } = useContext(UserDataContext);\r\n\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem(\"userData\");\r\n    if (storedUserData) {\r\n      setUserData(JSON.parse(storedUserData));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n  }, [userData]);\r\n\r\n  /////\r\n\r\n  const goToMain = () => {\r\n    navigate(\"/Mainpage\");\r\n  };\r\n\r\n  const questions = [\r\n    \"질문 1\",\r\n    \"질문 2\",\r\n    \"질문 3\",\r\n    \"질문 4\",\r\n    \"질문 5\",\r\n    \"질문 6\",\r\n    \"질문 7\",\r\n    \"질문 8\",\r\n    \"질문 9\",\r\n    \"질문 10\",\r\n    \"질문 11\",\r\n    \"질문 12\",\r\n  ];\r\n\r\n  const choices = [\"매우 그렇다\", \"그렇다\", \"보통\", \"아니다\", \"매우 아니다\"];\r\n\r\n  const [answers, setAnswers] = useState(Array(questions.length).fill(\"\"));\r\n\r\n  const handleButtonClick = (index, choice) => {\r\n    let newAnswers = [...answers];\r\n    newAnswers[index] = choice;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      testm1 !== \"\" &&\r\n      testm2 !== \"\" &&\r\n      testm3 !== \"\" &&\r\n      testm4 !== \"\" &&\r\n      !answers.includes(\"\") &&\r\n      vars === 1\r\n    ) {\r\n      setVars(999);\r\n      if (\r\n        userData.m1 === testm1 &&\r\n        userData.m2 === testm2 &&\r\n        userData.m3 === testm3 &&\r\n        userData.m4 === testm4\r\n      ) {\r\n        alert(\r\n          `${userData.nickname}님의 원래 MBTI는 ${userm1}${userm2}${userm3}${userm4}이고, 검사 결과 나온 MBTI는 ${testm1}${testm2}${testm3}${testm4}입니다. 바꾸시겠습니까?`\r\n        );\r\n      } else {\r\n        const isConfirmed = window.confirm(\r\n          `${userData.nickname}님의 원래 MBTI는 ${userm1}${userm2}${userm3}${userm4}이고, 검사 결과 나온 MBTI도 ${testm1}${testm2}${testm3}${testm4}입니다`\r\n        );\r\n\r\n        if (isConfirmed) {\r\n          axios.put(\r\n            `${process.env.REACT_APP_server_uri}/user/${userData.nickname}`,\r\n            {\r\n              m1: testm1,\r\n              m2: testm2,\r\n              m3: testm3,\r\n              m4: testm4,\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }, [testm1, testm2, testm3, testm4, answers]);\r\n\r\n  const handleSubmit = () => {\r\n    if (answers.includes(\"\")) {\r\n      alert(\"응답하지 않은 항목이 있습니다.\");\r\n    } else {\r\n      setVars(vars + 1);\r\n      setTestm1(\"I\");\r\n      setTestm2(\"S\");\r\n      setTestm3(\"F\");\r\n      setTestm4(\"J\");\r\n      setHasSubmitted(true);\r\n    }\r\n  };\r\n\r\n  const fetchUserMBTI = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_server_uri}/user/${userData.nickname}`\r\n      );\r\n      setUserm1(response.data.m1);\r\n      console.log(userm1);\r\n      setUserm2(response.data.m2);\r\n      console.log(userm2);\r\n      setUserm3(response.data.m3);\r\n      setUserm4(response.data.m4);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    fetchUserMBTI();\r\n  }, [fetchUserMBTI]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <button\r\n        style={{ position: \"absolute\", top: 50, right: 50, borderRadius: 15 }}\r\n        onClick={goToMain}\r\n      >\r\n        메인 페이지로 이동\r\n      </button>\r\n      <h1 style={{ textAlign: \"center\" }}>약식 MBTI 검사</h1>\r\n      <div\r\n        style={{\r\n          overflow: \"auto\",\r\n          maxHeight: \"80vh\",\r\n          textAlign: \"center\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        {questions.map((question, index) => (\r\n          <div key={index}>\r\n            <h3>{question}</h3>\r\n            {choices.map((choice, choiceIndex) => (\r\n              <button\r\n                key={choiceIndex}\r\n                onClick={() => handleButtonClick(index, choice)}\r\n                style={{\r\n                  backgroundColor:\r\n                    answers[index] === choice ? \"skyblue\" : \"#A4A4A4\",\r\n                  marginRight: 10,\r\n                  marginBottom: 15,\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                {choice}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button\r\n        onClick={handleSubmit}\r\n        style={{\r\n          marginTop: 10,\r\n          borderRadius: 10,\r\n          backgroundColor: hasSubmitted ? \"darkgrey\" : \"blue\",\r\n        }}\r\n        disabled={hasSubmitted}\r\n      >\r\n        답변 완료\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Signup.js",[],[],"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\BoardModal.js",["83","84","85","86","87"],[],"import { useContext, useState, useEffect, React } from \"react\";\r\nimport { UserDataContext } from \"./UserDataContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./sidebar.css\";\r\nimport PostList from \"./PostList\";\r\n\r\nfunction BoardModal(props){\r\n    \r\n\r\n    return (\r\n        <div className=\"board-container\">\r\n            <div className=\"sidebar\">\r\n                <h2>{props.selectedMBTI} 게시판</h2>\r\n                <button onClick={props.closeModal}>close</button>\r\n            </div>\r\n            <div className=\"content\">\r\n                <PostList posts={props.posts}\r\n                    openPostModal={props.openPostModal}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardModal;","C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\PostList.jsx",[],[],"C:\\Users\\frica\\Madcamp\\Week3\\Week3_web\\week3\\src\\Post.jsx",[],[],{"ruleId":"88","severity":1,"message":"89","line":64,"column":3,"nodeType":"90","messageId":"91","endLine":96,"endColumn":9},{"ruleId":"92","severity":1,"message":"93","line":64,"column":3,"nodeType":"90","messageId":"94","endLine":96,"endColumn":9},{"ruleId":"95","severity":1,"message":"96","line":42,"column":6,"nodeType":"97","endLine":42,"endColumn":8,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"96","line":23,"column":6,"nodeType":"97","endLine":23,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":75,"column":11,"nodeType":"102","endLine":79,"endColumn":12},{"ruleId":"95","severity":1,"message":"103","line":51,"column":6,"nodeType":"97","endLine":51,"endColumn":24,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"105","line":106,"column":6,"nodeType":"97","endLine":106,"endColumn":16,"suggestions":"106"},{"ruleId":"95","severity":1,"message":"107","line":134,"column":6,"nodeType":"97","endLine":134,"endColumn":24,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"96","line":29,"column":6,"nodeType":"97","endLine":29,"endColumn":8,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"110","line":103,"column":6,"nodeType":"97","endLine":103,"endColumn":47,"suggestions":"111"},{"ruleId":"95","severity":1,"message":"112","line":132,"column":6,"nodeType":"97","endLine":132,"endColumn":16,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":20},{"ruleId":"114","severity":1,"message":"118","line":1,"column":22,"nodeType":"116","messageId":"117","endLine":1,"endColumn":30},{"ruleId":"114","severity":1,"message":"119","line":1,"column":32,"nodeType":"116","messageId":"117","endLine":1,"endColumn":41},{"ruleId":"114","severity":1,"message":"120","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":25},{"ruleId":"114","severity":1,"message":"121","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":21},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUserData'. Either include it or remove the dependency array.","ArrayExpression",["122"],["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["124"],"React Hook useCallback has a missing dependency: 'userId'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'fetchVoteCounts'. Either include it or remove the dependency array.",["126"],["127"],"React Hook useEffect has missing dependencies: 'userData.m1', 'userData.m2', 'userData.m3', 'userData.m4', 'userData.nickname', 'userm1', 'userm2', 'userm3', 'userm4', and 'vars'. Either include them or remove the dependency array.",["128"],"React Hook useCallback has missing dependencies: 'userm1' and 'userm2'. Either include them or remove the dependency array.",["129"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserDataContext' is defined but never used.","'useNavigate' is defined but never used.",{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"130","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [setUserData]",{"range":"144","text":"145"},{"range":"146","text":"145"},"Update the dependencies array to be: [fetchComments, selectedQuestion]",{"range":"147","text":"148"},"Update the dependencies array to be: [userData.nickname, userId]",{"range":"149","text":"150"},"Update the dependencies array to be: [fetchVoteCounts, selectedQuestion]",{"range":"151","text":"152"},{"range":"153","text":"145"},"Update the dependencies array to be: [testm1, testm2, testm3, testm4, answers, vars, userData.m1, userData.m2, userData.m3, userData.m4, userData.nickname, userm1, userm2, userm3, userm4]",{"range":"154","text":"155"},"Update the dependencies array to be: [userData.nickname, userm1, userm2]",{"range":"156","text":"157"},[1330,1332],"[setUserData]",[777,779],[1653,1671],"[fetchComments, selectedQuestion]",[3026,3036],"[userData.nickname, userId]",[3663,3681],"[fetchVoteCounts, selectedQuestion]",[1021,1023],[2771,2812],"[testm1, testm2, testm3, testm4, answers, vars, userData.m1, userData.m2, userData.m3, userData.m4, userData.nickname, userm1, userm2, userm3, userm4]",[3541,3551],"[userData.nickname, userm1, userm2]"]