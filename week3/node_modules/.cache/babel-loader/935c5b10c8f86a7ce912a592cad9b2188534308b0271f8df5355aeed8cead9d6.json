{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KimHaeno\\\\Week3_web\\\\week3\\\\src\\\\PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  pageBox: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n};\n\n// const posts = [\n//     {\n//         title:\"Pierrot le Fou\",\n//         content:\"À bout de souffle\",\n//         time: \"1965\"\n//     },\n//     {\n//         title:\"Vivre Sa vie\",\n//         content:\"Goodbye to Language\",\n//         time: \"1962\"\n//     },\n//     {\n//         title:\"Alphaville\",\n//         content:\"Hail Mary\",\n//         time:\"1965\"\n//     },\n//     {\n//         title:\"Tout va bien\",\n//         content:\"Wind from the East\",\n//         time: \"1972\"\n//     },\n//     {\n//         title:\"Pierrot le Fou\",\n//         content:\"À bout de souffle\",\n//         time: \"1965\"\n//     },\n//     {\n//         title:\"Vivre Sa vie\",\n//         content:\"Goodbye to Language\",\n//         time: \"1962\"\n//     },\n// ]\n\nconst postsPerPage = 8;\nfunction PostList(props) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const startIndex = (currentPage - 1) * postsPerPage;\n  const endIndex = startIndex + postsPerPage;\n  const currentPosts = props.posts.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(props.posts.length / postsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        content: post.content,\n        time: post.time,\n        onClick: () => props.openPostModal(post.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.pageBox,\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => index + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page),\n        disabled: currentPage === page,\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(PostList, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","Post","jsxDEV","_jsxDEV","styles","pageBox","display","justifyContent","postsPerPage","PostList","props","_s","currentPage","setCurrentPage","startIndex","endIndex","currentPosts","posts","slice","totalPages","Math","ceil","length","handlePageChange","page","children","map","post","title","content","time","onClick","openPostModal","id","fileName","_jsxFileName","lineNumber","columnNumber","style","Array","from","_","index","disabled","_c","$RefreshReg$"],"sources":["C:/Users/KimHaeno/Week3_web/week3/src/PostList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nconst styles = {\r\n    pageBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    }\r\n\r\n}\r\n\r\n\r\n// const posts = [\r\n//     {\r\n//         title:\"Pierrot le Fou\",\r\n//         content:\"À bout de souffle\",\r\n//         time: \"1965\"\r\n//     },\r\n//     {\r\n//         title:\"Vivre Sa vie\",\r\n//         content:\"Goodbye to Language\",\r\n//         time: \"1962\"\r\n//     },\r\n//     {\r\n//         title:\"Alphaville\",\r\n//         content:\"Hail Mary\",\r\n//         time:\"1965\"\r\n//     },\r\n//     {\r\n//         title:\"Tout va bien\",\r\n//         content:\"Wind from the East\",\r\n//         time: \"1972\"\r\n//     },\r\n//     {\r\n//         title:\"Pierrot le Fou\",\r\n//         content:\"À bout de souffle\",\r\n//         time: \"1965\"\r\n//     },\r\n//     {\r\n//         title:\"Vivre Sa vie\",\r\n//         content:\"Goodbye to Language\",\r\n//         time: \"1962\"\r\n//     },\r\n// ]\r\n\r\nconst postsPerPage = 8;\r\n\r\nfunction PostList(props){\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const startIndex = (currentPage - 1) * postsPerPage;\r\n    const endIndex = startIndex + postsPerPage;\r\n    const currentPosts = props.posts.slice(startIndex, endIndex);\r\n\r\n    const totalPages = Math.ceil(props.posts.length / postsPerPage);\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <ul>\r\n                {currentPosts.map((post) => (\r\n                    <Post title={post.title} content={post.content} time={post.time}\r\n                        onClick={() => props.openPostModal(post.id)}/>\r\n                ))}\r\n            </ul>\r\n            <div style={styles.pageBox}>\r\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(\r\n                (page) => (\r\n                    <button\r\n                        key={page}\r\n                        onClick={() => handlePageChange(page)}\r\n                        disabled={currentPage === page}\r\n                    >\r\n                    {page}\r\n                    </button>\r\n                )\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAG;EACXC,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE;EACpB;AAEJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAEtB,SAASC,QAAQA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAEpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMc,UAAU,GAAG,CAACF,WAAW,GAAG,CAAC,IAAIJ,YAAY;EACnD,MAAMO,QAAQ,GAAGD,UAAU,GAAGN,YAAY;EAC1C,MAAMQ,YAAY,GAAGN,KAAK,CAACO,KAAK,CAACC,KAAK,CAACJ,UAAU,EAAEC,QAAQ,CAAC;EAE5D,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACX,KAAK,CAACO,KAAK,CAACK,MAAM,GAAGd,YAAY,CAAC;EAE/D,MAAMe,gBAAgB,GAAIC,IAAI,IAAK;IAC/BX,cAAc,CAACW,IAAI,CAAC;EACxB,CAAC;EAED,oBAEIrB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EACKT,YAAY,CAACU,GAAG,CAAEC,IAAI,iBACnBxB,OAAA,CAACF,IAAI;QAAC2B,KAAK,EAAED,IAAI,CAACC,KAAM;QAACC,OAAO,EAAEF,IAAI,CAACE,OAAQ;QAACC,IAAI,EAAEH,IAAI,CAACG,IAAK;QAC5DC,OAAO,EAAEA,CAAA,KAAMrB,KAAK,CAACsB,aAAa,CAACL,IAAI,CAACM,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLlC,OAAA;MAAKmC,KAAK,EAAElC,MAAM,CAACC,OAAQ;MAAAoB,QAAA,EACtBc,KAAK,CAACC,IAAI,CAAC;QAAElB,MAAM,EAAEH;MAAW,CAAC,EAAE,CAACsB,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CAAChB,GAAG,CAC/DF,IAAI,iBACDrB,OAAA;QAEI4B,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAACC,IAAI,CAAE;QACtCmB,QAAQ,EAAE/B,WAAW,KAAKY,IAAK;QAAAC,QAAA,EAElCD;MAAI,GAJIA,IAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKL,CAEZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC1B,EAAA,CAtCQF,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}